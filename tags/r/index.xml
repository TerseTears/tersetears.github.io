<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>R on TerseTears&#39;s Blog</title>
    <link>http://tersetears.github.io/tags/r/</link>
    <description>Recent content in R on TerseTears&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 02 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://tersetears.github.io/tags/r/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Journey Through `tyecon`: Predictions on Recipe Nutritions</title>
      <link>http://tersetears.github.io/posts/journey-through-tyecon/predict-nutrs/</link>
      <pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>http://tersetears.github.io/posts/journey-through-tyecon/predict-nutrs/</guid>
      <description>Introduction In this second part of the &amp;ldquo;journey through tyecon&amp;rdquo; series, I want to showcase the package&amp;rsquo;s facilities in simplifying tasks common to the predictive modelling part of data analysis. I will be using the Food.com dataset as before.
Setup and Data Import library(tidyverse) library(tidyselect) library(magrittr) library(vroom) library(tyecon) library(rsample) library(yardstick) library(glmnet) library(earth) library(pls) knitr::opts_chunk$set(fig.path = &amp;#34;&amp;#34;) knitr::opts_chunk$set(dev = &amp;#39;svg&amp;#39;) theme_set(theme_light()) set.seed(123) recipes &amp;lt;- vroom(&amp;#34;~/Workspace/foodrecipes/RAW_recipes.csv&amp;#34;) interacts &amp;lt;- vroom(&amp;#34;~/Workspace/foodrecipes/RAW_interactions.csv&amp;#34;) Nutrition values, except for calories, are all percent of daily value, a daily quota filled by the amount of the percentage by the consumption of the specific food.</description>
    </item>
    
    <item>
      <title>Journey Through `tyecon`: Exploring Food.com Tags</title>
      <link>http://tersetears.github.io/posts/journey-through-tyecon/explore-tags/</link>
      <pubDate>Wed, 01 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://tersetears.github.io/posts/journey-through-tyecon/explore-tags/</guid>
      <description>Introduction I&amp;rsquo;ve been working on my R package, tyecon for some time now. I think it can be a useful tool in performing day to day data analysis tasks. The idea is very simple: More higher order macros. There&amp;rsquo;s no reason to focus on the handful of existing ones, like the magrittr pipes or the dplyr syntax. We have a language here that supports lazy evaluation and first class functions. This is all we need to make programming life easier.</description>
    </item>
    
    <item>
      <title>dplyr Cheatsheet to DataFrames.jl Page 2</title>
      <link>http://tersetears.github.io/posts/dplyr-dataframes-part2/</link>
      <pubDate>Sat, 13 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>http://tersetears.github.io/posts/dplyr-dataframes-part2/</guid>
      <description>Continuing Where We Left This post shows how to translate the second page of the dplyr cheatsheet to DataFrames.jl and Julia commnads.
using RDatasets, RCall, DataFrames, StatsBase, Statistics R&amp;#34;library(tidyverse)&amp;#34;; Setting up the data using RCall mpg = dataset(&amp;#34;ggplot2&amp;#34;, &amp;#34;mpg&amp;#34;); Vectorized Functions lag, lead julia&amp;gt; R&amp;#34;&amp;#34;&amp;#34; mutate(mpg, leadyear = lead(year)) %&amp;gt;% select(year, leadyear) %&amp;gt;% tail &amp;#34;&amp;#34;&amp;#34; RObject{VecSxp} # A tibble: 6 x 2 year leadyear &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; 1 1999 2008 2 2008 2008 3 2008 1999 4 1999 1999 5 1999 2008 6 2008 NA In Julia:</description>
    </item>
    
    <item>
      <title>dplyr Cheatsheet to DataFrames.jl Page 1</title>
      <link>http://tersetears.github.io/posts/dplyr-dataframes/</link>
      <pubDate>Tue, 02 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>http://tersetears.github.io/posts/dplyr-dataframes/</guid>
      <description>Introduction With the release of v1.0 of the DataFrames.jl package, it would seem appropriate to introduce a rather comprehensive cheatsheet of it. One that is of special use to people who come from tidyverse (arguably, the best data transformation syntax there is for combined expressiveness and brevity).
The order of topics is the same as dplyr cheatsheet.
using RDatasets, RCall, DataFrames, StatsBase, InteractiveErrors R&amp;#34;library(dplyr)&amp;#34;; Setting up the data using RCall data = dataset(&amp;#34;datasets&amp;#34;, &amp;#34;iris&amp;#34;) @rput data; Summarize Cases summarize julia&amp;gt; R&amp;#34;summarize(data, avSL = mean(SepalLength), avSW = mean(SepalWidth))&amp;#34; RObject{VecSxp} avSL avSW 1 5.</description>
    </item>
    
  </channel>
</rss>
